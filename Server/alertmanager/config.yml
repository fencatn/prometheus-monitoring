# The root route on which each incoming alert enters.
route:
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: telegram

  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
 # group_by: ['project']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 1m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h

  routes:
  - match:
      project: adkintun
    receiver: telegram
  routes:
  - match:
      project: resiliencia
    receiver: telegram
  routes:
  - match:
      project: Monitor
    receiver: telegram
  routes:
  - match:
      project: B
    receiver: telegram


receivers:
- name: 'telegram'
  webhook_configs:
   - url: http://telegram-bot:9087/alert/-211943050
